.top-menu

  input#top-menu__toggle(
    type="checkbox"
  )

  .top-menu__icon-list
    label.top-menu__toggle(
      for="top-menu__toggle"
    )

    input(
      type="checkbox"
      id="top-menu__news-toggle"
    )

    input(
      type="checkbox"
      id="top-menu__search-toggle"
    )

    .top-menu__logo-wrapper
      a.top-menu__logo(
        href="/"
        title="take me home"
      )
      input.top-menu__search-input(
        type="text"
        disabled
      )


    label.top-menu__news(
      for="top-menu__news-toggle"
    )


    label.top-menu__search(
      for="top-menu__search-toggle"
    )

  nav.top-menu__nav
    //- input(
    //-   type="radio"
    //-   name="horizontal-navigation"
    //-   id="top-menu__left-icon"
    //-   checked
    //- )
    //- input(
    //-   type="radio"
    //-   name="horizontal-navigation"
    //-   id="top-menu__right-icon"
    //- )


    .top-menu__nav-content-wrapper
      .top-menu__nav-content
        each mainNavItem, key in data.menu.list
          if mainNavItem.list
            if key === 1
              input.top-menu__sub-nav-toggle(
                type="radio"
                id="sub-menu-reset"
                name="sub-menu"
              )
            input.top-menu__sub-nav-toggle(
              type="radio"
              id=`sub-menu-${key}`
              name="sub-menu"
            )


          a(
            class=`top-menu__main-link${mainNavItem.list ? '-toggle' : '-simple'}`
            href=mainNavItem.href
            title=mainNavItem.title
            data-current-link=key === 3
            data-change-location=mainNavItem.columns
          )
            | #{mainNavItem.label}
            if mainNavItem.list
              label.top-menu__drop-down-icon(
                for=`sub-menu-${key}`
              )
              label.top-menu__drop-down-icon--close(
                for=`sub-menu-reset`
              )
          if mainNavItem.list
            nav(
              class=`top-menu__sub-nav--${mainNavItem.columns ? 'columns' : 'simple'}`
            )
              each subNavItem, subKey in mainNavItem.list
                if subNavItem.list && Array.isArray(subNavItem.list)
                  section.top-menu__sub-nav-link(
                    title=subNavItem.title
                  )
                    span= subNavItem.label
                    each subNavSecondartItem in subNavItem.list
                      a.top-menu__sub-nav-link(
                        href=subNavSecondartItem.href
                        title=subNavSecondartItem.title
                      )= subNavSecondartItem.label
                else
                  a.top-menu__sub-nav-link(
                    href=subNavItem.href
                    data-has-image=!!subNavItem.src
                    title=subNavItem.title
                  )
                    if subNavItem.src 
                      img.top-menu__sub-nav-image(
                        src=subNavItem.src 
                        alt=subNavItem.alt
                      )
                    | #{subNavItem.label}
    button.top-menu__left-icon(
      type="button"
    )

    button.top-menu__right-icon(
      type="button"
    )

include newsletter


script.
  // Select all the top-menu__main-link elements inside top-menu__nav-content
  var linkList = document.querySelectorAll('.top-menu__nav-content .top-menu__main-link-simple:not([data-change-location]), .top-menu__nav-content .top-menu__main-link-toggle:not([data-change-location])');

  // Initialize a variable to keep track of the cumulative width
  var currentSlideBy = 0;
  var widthList = [0]
  var currentWidthIndex = 1
  var topMenuNav = document.querySelector('.top-menu__nav');
  var topMenuRightIcon = document.querySelector('.top-menu__right-icon');
  var topMenuLeftIcon = document.querySelector('.top-menu__left-icon');


  const sumWidth = (list, index) => list.slice(0, index + 1).reduce((a, c) => a + c, 0)

  // Iterate over the linkList
  linkList.forEach(function(link, index) {
    // Get the width of the current link
    var width = link.offsetWidth + (link.classList.contains('top-menu__main-link-simple') ? 32 : 68);
    widthList.push(width);
    link.style.setProperty('--left', sumWidth(widthList, index) + 'px');
  });

  if (topMenuRightIcon) {
    topMenuRightIcon.addEventListener('click',  () => {
      if (sumWidth(widthList,  widthList.length) + currentSlideBy > topMenuNav.offsetWidth) {
        currentSlideBy = -sumWidth(widthList, currentWidthIndex)
        document.documentElement.style.setProperty('--slide-by', currentSlideBy + 'px')
        currentWidthIndex++
      }
    })
  }

  if (topMenuLeftIcon) {
    topMenuLeftIcon.addEventListener('click', () => {
      if (currentSlideBy < 0) {
        currentSlideBy = 0
        document.documentElement.style.setProperty('--slide-by', 0 + 'px')
        currentWidthIndex = 1
      }
    })
  }

  //- newsletter dialog
  var newsletterDialog = document.querySelector('#newsletter__dialog')
  var topMenuNews = document.querySelector('.top-menu__news')
  var topMenuNewsToggle = document.querySelector('#top-menu__news-toggle')
  var newsletterCloseButton = document.querySelector('.newsletter__close-button')

  if (newsletterDialog && topMenuNews && topMenuNewsToggle) {
    newsletterCloseButton.addEventListener('click', () => {
      topMenuNewsToggle.checked = false
      newsletterDialog.close()
    })

    newsletterDialog.addEventListener('close', () => {
      topMenuNewsToggle.checked = false
    })

    topMenuNewsToggle.addEventListener('change', (e) => {
      if (e.target.checked) {
        newsletterDialog.showModal()
      } else {
        newsletterDialog.close()
      }
    })
  }

  //- toggle input focus and disabled attribute
  var searchInput = document.querySelector('.top-menu__search-input')
  var searchInputToggle = document.querySelector('#top-menu__search-toggle')
  if (searchInput && searchInputToggle) {
    searchInputToggle.addEventListener('change', function(e) {
      if (e.target.checked) {
        searchInput.removeAttribute('disabled')
        searchInput.focus()
      } else {
        searchInput.setAttribute('disabled', true)
      }
    })
  }
